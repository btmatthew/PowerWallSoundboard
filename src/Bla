import themidibus.*; //Import the library
import javax.sound.midi.*;

MidiBus myBus; // The MidiBus

Synthesizer synthesizer = null;
 
boolean StartSynth()
{
  try
  {
    synthesizer = MidiSystem.getSynthesizer();
    synthesizer.open();
  }
  catch (MidiUnavailableException e)
  {
    println("Cannot play!");
    return false;
  }
  return true;
}
void StopSynth()
{
  if (synthesizer != null)
  {
    synthesizer.close();
    synthesizer = null;
  }
}
void Wait(int duration)
{
  try { Thread.sleep(duration); } catch (InterruptedException e) {}
}
void PlayNote(int noteNumber, int velocity, int duration)
{
  MidiChannel[] channels = synthesizer.getChannels();
  channels[0].noteOn(noteNumber, velocity);
  Wait(duration);
  channels[0].noteOff(noteNumber);
}
void PlayNote(int noteNumber, int velocity, int durationOn, int durationOff)
{
  MidiChannel[] channels = synthesizer.getChannels();
  channels[0].noteOn(noteNumber, velocity);
  Wait(durationOn);
  channels[0].noteOff(noteNumber, durationOff);
}

void stop()
{
  println("Stop");
  StopSynth();
  super.stop();
}

void setup() {
  size(400, 400);
  background(0);

{
  if (!StartSynth())
  {
    exit();
  } 
  PlayNote(72, 120, 500);
  PlayNote(60, 80, 200);
  PlayNote(68, 80, 300);
  Wait(50);
  PlayNote(48, 60, 500, 800);
  Wait(50);
  
  exit(); 
}

  MidiBus.list(); // List all available Midi devices on STDOUT. This will show each device's index and name.

  // Either you can
  //                   Parent In Out
  //                     |    |  |
  myBus = new MidiBus(this, 1, 2); // Create a new MidiBus using the device index to select the Midi input and output devices respectively.

  // or you can ...
  //                   Parent         In                   Out
  //                     |            |                     |
  //myBus = new MidiBus(this, "IncomingDeviceName", "OutgoingDeviceName"); // Create a new MidiBus using the device names to select the Midi input and output devices respectively.

  // or for testing you could ...
  //                 Parent  In        Out
  //                   |     |          |
  //myBus = new MidiBus(this, -1, "Java Sound Synthesizer"); // Create a new MidiBus with no input device and the default Java Sound Synthesizer as the output device.
}

void draw() {
  int channel = 0;
  int pitch = 64;
  int velocity = 127;

  myBus.sendNoteOn(channel, pitch, velocity); // Send a Midi noteOn
  delay(200);
  myBus.sendNoteOff(channel, pitch, velocity); // Send a Midi nodeOff

  int number = 0;
  int value = 90;

  myBus.sendControllerChange(channel, number, value); // Send a controllerChange
  delay(2000);
}

void noteOn(int channel, int pitch, int velocity) {
  // Receive a noteOn
  
  println();
  println("Note On:");
  println("--------");
  println("Channel:"+channel);
  println("Pitch:"+pitch);
  println("Velocity:"+velocity);
  //PlayNote(pitch, velocity, 500);
}

void noteOff(int channel, int pitch, int velocity) {
  // Receive a noteOff
  println();
  println("Note Off:");
  println("--------");
  println("Channel:"+channel);
  println("Pitch:"+pitch);
  println("Velocity:"+velocity);
}

void controllerChange(int channel, int number, int value) {
  // Receive a controllerChange
  println();
  println("Controller Change:");
  println("--------");
  println("Channel:"+channel);
  println("Number:"+number);
  println("Value:"+value);
}

void delay(int time) {
  int current = millis();
  while (millis () < current+time) Thread.yield();
}
